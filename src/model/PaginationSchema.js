/**
 * alertmanager
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaginationSchema model module.
 * @module model/PaginationSchema
 * @version 1.0.0
 */
class PaginationSchema {
    /**
     * Constructs a new <code>PaginationSchema</code>.
     * @alias module:model/PaginationSchema
     * @param page {Number} 
     * @param pageSize {Number} 
     * @param rows {Array.<Object>} 
     * @param totalRows {Number} 
     */
    constructor(page, pageSize, rows, totalRows) { 
        
        PaginationSchema.initialize(this, page, pageSize, rows, totalRows);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, page, pageSize, rows, totalRows) { 
        obj['page'] = page;
        obj['pageSize'] = pageSize;
        obj['rows'] = rows;
        obj['totalRows'] = totalRows;
    }

    /**
     * Constructs a <code>PaginationSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaginationSchema} obj Optional instance to populate.
     * @return {module:model/PaginationSchema} The populated <code>PaginationSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaginationSchema();

            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], [Object]);
            }
            if (data.hasOwnProperty('totalRows')) {
                obj['totalRows'] = ApiClient.convertToType(data['totalRows'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaginationSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaginationSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaginationSchema.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rows'])) {
            throw new Error("Expected the field `rows` to be an array in the JSON data but got " + data['rows']);
        }

        return true;
    }


}

PaginationSchema.RequiredProperties = ["page", "pageSize", "rows", "totalRows"];

/**
 * @member {Number} page
 */
PaginationSchema.prototype['page'] = undefined;

/**
 * @member {Number} pageSize
 */
PaginationSchema.prototype['pageSize'] = undefined;

/**
 * @member {Array.<Object>} rows
 */
PaginationSchema.prototype['rows'] = undefined;

/**
 * @member {Number} totalRows
 */
PaginationSchema.prototype['totalRows'] = undefined;






export default PaginationSchema;

