/**
 * alertmanager
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientAppSchema model module.
 * @module model/ClientAppSchema
 * @version 1.0.0
 */
class ClientAppSchema {
    /**
     * Constructs a new <code>ClientAppSchema</code>.
     * @alias module:model/ClientAppSchema
     * @param id {String} 
     */
    constructor(id) { 
        
        ClientAppSchema.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ClientAppSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientAppSchema} obj Optional instance to populate.
     * @return {module:model/ClientAppSchema} The populated <code>ClientAppSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientAppSchema();

            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('contract')) {
                obj['contract'] = ApiClient.convertToType(data['contract'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('billing_id')) {
                obj['billing_id'] = ApiClient.convertToType(data['billing_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientAppSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientAppSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClientAppSchema.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['contract'] && !(typeof data['contract'] === 'string' || data['contract'] instanceof String)) {
            throw new Error("Expected the field `contract` to be a primitive type in the JSON string but got " + data['contract']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['billing_id'] && !(typeof data['billing_id'] === 'string' || data['billing_id'] instanceof String)) {
            throw new Error("Expected the field `billing_id` to be a primitive type in the JSON string but got " + data['billing_id']);
        }

        return true;
    }


}

ClientAppSchema.RequiredProperties = ["id"];

/**
 * @member {Date} updated_at
 */
ClientAppSchema.prototype['updated_at'] = undefined;

/**
 * @member {String} name
 */
ClientAppSchema.prototype['name'] = undefined;

/**
 * @member {Boolean} deleted
 */
ClientAppSchema.prototype['deleted'] = undefined;

/**
 * @member {String} contract
 */
ClientAppSchema.prototype['contract'] = undefined;

/**
 * @member {Object} labels
 */
ClientAppSchema.prototype['labels'] = undefined;

/**
 * @member {String} id
 */
ClientAppSchema.prototype['id'] = undefined;

/**
 * @member {String} token
 */
ClientAppSchema.prototype['token'] = undefined;

/**
 * @member {Date} created_at
 */
ClientAppSchema.prototype['created_at'] = undefined;

/**
 * @member {String} url
 */
ClientAppSchema.prototype['url'] = undefined;

/**
 * @member {String} billing_id
 */
ClientAppSchema.prototype['billing_id'] = undefined;






export default ClientAppSchema;

