/**
 * alertmanager
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import EventSchema from './model/EventSchema';
import PaginationSchema from './model/PaginationSchema';
import PolicyChannelSchema from './model/PolicyChannelSchema';
import PolicySchema from './model/PolicySchema';
import ChannelsApi from './api/ChannelsApi';
import DocsApi from './api/DocsApi';
import EventsApi from './api/EventsApi';
import HealthCheckApi from './api/HealthCheckApi';
import NotificationsApi from './api/NotificationsApi';
import PoliciesApi from './api/PoliciesApi';
import WelcomeApi from './api/WelcomeApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Alertmanager = require('index'); // See note below*.
* var xxxSvc = new Alertmanager.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Alertmanager.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Alertmanager.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Alertmanager.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The EventSchema model constructor.
     * @property {module:model/EventSchema}
     */
    EventSchema,

    /**
     * The PaginationSchema model constructor.
     * @property {module:model/PaginationSchema}
     */
    PaginationSchema,

    /**
     * The PolicyChannelSchema model constructor.
     * @property {module:model/PolicyChannelSchema}
     */
    PolicyChannelSchema,

    /**
     * The PolicySchema model constructor.
     * @property {module:model/PolicySchema}
     */
    PolicySchema,

    /**
    * The ChannelsApi service constructor.
    * @property {module:api/ChannelsApi}
    */
    ChannelsApi,

    /**
    * The DocsApi service constructor.
    * @property {module:api/DocsApi}
    */
    DocsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The HealthCheckApi service constructor.
    * @property {module:api/HealthCheckApi}
    */
    HealthCheckApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The PoliciesApi service constructor.
    * @property {module:api/PoliciesApi}
    */
    PoliciesApi,

    /**
    * The WelcomeApi service constructor.
    * @property {module:api/WelcomeApi}
    */
    WelcomeApi
};
